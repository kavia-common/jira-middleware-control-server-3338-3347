{"is_source_file": true, "format": "Python", "description": "This file defines error handling utilities for a FastAPI application, including error response models, helper functions to produce JSON error responses, and registration of global exception handlers for various exception types.", "external_files": ["fastapi", "httpx", "pydantic"], "external_methods": ["fastapi.exception_handler", "fastapi.responses.JSONResponse", "pydantic.BaseModel", "pydantic.Field", "httpx.HTTPStatusError", "httpx.RequestError", "fastapi.Request", "fastapi.HTTPException"], "published": ["install_exception_handlers"], "classes": [{"name": "ErrorResponse", "description": "Standard API error response data model with error type, message, and optional details."}], "methods": [{"name": "JSONResponse _error_json(error: str, message: str, status_code: int, details: Optional[Dict[str, Any]] = None)", "description": "Helper function to create a JSONResponse with a standard error structure.", "scope": "", "scopeKind": ""}, {"name": "None install_exception_handlers(app: FastAPI)", "description": "Registers global exception handlers for various exception types in a FastAPI app.", "scope": "", "scopeKind": ""}, {"name": "http_exception_handler(_: Request, exc: HTTPException)", "scope": "install_exception_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "httpx_request_error_handler(_: Request, exc: httpx.RequestError)", "scope": "install_exception_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "httpx_status_error_handler(_: Request, exc: httpx.HTTPStatusError)", "scope": "install_exception_handlers", "scopeKind": "function", "description": "unavailable"}, {"name": "unhandled_exception_handler(_: Request, exc: Exception)", "scope": "install_exception_handlers", "scopeKind": "function", "description": "unavailable"}], "calls": ["JSONResponse", "ErrorResponse.model_dump", "logger.warning", "logger.error", "logger.exception"], "search-terms": ["ErrorResponse", "install_exception_handlers", "HTTPException", "httpx.HTTPStatusError", "FastAPI", "error handling"], "state": 2, "file_id": 8, "knowledge_revision": 16, "git_revision": "", "ctags": [{"_type": "tag", "name": "ErrorResponse", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^class ErrorResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_error_json", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^def _error_json(error: str, message: str, status_code: int, details: Optional[Dict[str, Any]] = /", "language": "Python", "typeref": "typename:JSONResponse", "kind": "function", "signature": "(error: str, message: str, status_code: int, details: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "details", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^    details: Optional[Dict[str, Any]] = Field(default=None, description=\"Optional extra details\"/", "language": "Python", "typeref": "typename:Optional[Dict[str, Any]]", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^    error: str = Field(..., description=\"Short error type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "http_exception_handler", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^    async def http_exception_handler(_: Request, exc: HTTPException):$/", "file": true, "language": "Python", "kind": "function", "signature": "(_: Request, exc: HTTPException)", "scope": "install_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "httpx_request_error_handler", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^    async def httpx_request_error_handler(_: Request, exc: httpx.RequestError):$/", "file": true, "language": "Python", "kind": "function", "signature": "(_: Request, exc: httpx.RequestError)", "scope": "install_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "httpx_status_error_handler", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^    async def httpx_status_error_handler(_: Request, exc: httpx.HTTPStatusError):$/", "file": true, "language": "Python", "kind": "function", "signature": "(_: Request, exc: httpx.HTTPStatusError)", "scope": "install_exception_handlers", "scopeKind": "function"}, {"_type": "tag", "name": "install_exception_handlers", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^def install_exception_handlers(app: FastAPI) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(app: FastAPI)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^    message: str = Field(..., description=\"Human readable error message\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ErrorResponse", "scopeKind": "class"}, {"_type": "tag", "name": "unhandled_exception_handler", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/core/errors.py", "pattern": "/^    async def unhandled_exception_handler(_: Request, exc: Exception):$/", "file": true, "language": "Python", "kind": "function", "signature": "(_: Request, exc: Exception)", "scope": "install_exception_handlers", "scopeKind": "function"}], "hash": "6556e12adc13c1c69a4a4dbb17ab4f0c", "format-version": 4, "code-base-name": "jira_mcp_backend", "filename": "jira_mcp_backend/src/core/errors.py", "fields": [{"name": "Optional[Dict[str, Any]] details", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str error", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str message", "scope": "ErrorResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"16": ""}]}