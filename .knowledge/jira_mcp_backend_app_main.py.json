{"is_source_file": true, "format": "Python", "description": "Main application setup for FastAPI server, including middleware, exception handling, configuration, and route inclusion for the jira-mcp-backend project.", "external_files": ["app.core.config", "app.core.security", "app.api.routes.health", "app.api.routes.jira"], "external_methods": ["get_settings", "get_auth_dependency"], "published": ["app"], "classes": [{"name": "FastAPI", "description": "Main FastAPI application instance used to define routes, middleware, and startup/shutdown events."}], "methods": [{"name": "lifespan(app: FastAPI)", "description": "Async context manager handling application startup and shutdown procedures, including logging.", "scope": "", "scopeKind": ""}, {"name": "FastAPI create_app(settings: Optional[AppSettings] = None)", "description": "Factory function that creates and configures the FastAPI app, setting up middleware, exception handlers, and routers.", "scope": "", "scopeKind": ""}, {"name": "root(_: None = Depends(get_auth_dependency(settings)))", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}, {"name": "unhandled_exception_handler(request: Request, exc: Exception)", "scope": "create_app", "scopeKind": "function", "description": "unavailable"}], "calls": ["get_settings", "logger.info", "logger.exception", "app.include_router", "Depends"], "search-terms": ["FastAPI initialization", "application lifecycle", "route configuration", "middleware setup", "exception handling", "JIRA MCP Backend"], "state": 2, "file_id": 5, "knowledge_revision": 11, "git_revision": "", "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^app = create_app()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_app", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^def create_app(settings: Optional[AppSettings] = None) -> FastAPI:$/", "language": "Python", "typeref": "typename:FastAPI", "kind": "function", "signature": "(settings: Optional[AppSettings] = None)"}, {"_type": "tag", "name": "health_router", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^from app.api.routes.health import router as health_router$/", "language": "Python", "kind": "unknown", "nameref": "unknown:router"}, {"_type": "tag", "name": "jira_router", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^from app.api.routes.jira import router as jira_router$/", "language": "Python", "kind": "unknown", "nameref": "unknown:router"}, {"_type": "tag", "name": "lifespan", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^async def lifespan(app: FastAPI):$/", "language": "Python", "kind": "function", "signature": "(app: FastAPI)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^logger = logging.getLogger(\"jira-mcp-backend\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "root", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^    async def root(_: None = Depends(get_auth_dependency(settings))):$/", "file": true, "language": "Python", "kind": "function", "signature": "(_: None = Depends(get_auth_dependency(settings)))", "scope": "create_app", "scopeKind": "function"}, {"_type": "tag", "name": "unhandled_exception_handler", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/main.py", "pattern": "/^    async def unhandled_exception_handler(request: Request, exc: Exception):$/", "file": true, "language": "Python", "kind": "function", "signature": "(request: Request, exc: Exception)", "scope": "create_app", "scopeKind": "function"}], "hash": "a93165b4daa8706d301000e05753dddc", "format-version": 4, "code-base-name": "jira_mcp_backend", "filename": "jira_mcp_backend/app/main.py", "fields": [{"name": "app = create_app()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(\"jira-mcp-backend\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"11": ""}]}