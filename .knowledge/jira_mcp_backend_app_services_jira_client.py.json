{"is_source_file": true, "format": "Python", "description": "This file implements a comprehensive asynchronous Jira API client with functionalities for issue management, field mapping, sprint handling, and error handling. It also includes custom exception classes and internal retry logic for robustness.", "external_files": ["app.core.config", "app.utils.logging", "httpx"], "external_methods": ["get_settings", "logger.debug", "logger", "timed_log_debug"], "published": ["JiraClient", "JiraClientError", "get_jira_client"], "classes": [{"name": "JiraClientError", "description": "Custom exception class for Jira API related errors, including status codes and optional additional details."}, {"name": "JiraClient", "description": "Main asynchronous client class for interacting with Jira's REST and Agile APIs, supporting issue creation, search, transition, comment, sprint operations, and more."}], "methods": [{"name": "httpx.AsyncClient _get_client(self)", "description": "Initializes and caches an internal HTTPX async client with appropriate headers.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _basic_token(self)", "description": "Generates a Basic Auth token for Jira API authorization.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "httpx.Response _request_with_retries(self, method: str, url: str, **kwargs)", "description": "Performs HTTP requests with retries on certain error responses and network errors, implementing an exponential backoff.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _safe_response_text(self, response: httpx.Response)", "description": "Safely extracts text from a response, handling exceptions gracefully.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues(self, jql: str, fields: Optional[List[str]] = None, max_results: int = 25)", "description": "Performs a JQL search for issues, returning the JSON response.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, description: Optional[str], issuetype: str)", "description": "Creates a new Jira issue with specified project, summary, description, and issue type.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,str] get_field_mappings(self)", "description": "Discovers and caches custom field IDs for Epic Link, Epic Name, and Story Points based on environment-configured display names.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_epic(self, request: Any)", "description": "Creates a Jira Epic issue, setting the epic name using custom fields.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_story(self, request: Any)", "description": "Creates a Jira Story issue, optionally linking to an epic and setting story points.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] link_issue_to_epic(self, epic_key_or_id: str, issue_key_or_id: str)", "description": "Links an existing issue to an epic via the Epic Link custom field.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] get_transitions(self, issue_key: str)", "description": "Fetches available transition options for an issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] transition_issue(self, issue_key: str, transition_id: str)", "description": "Performs a state transition on an issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] add_comment(self, issue_key: str, body: str)", "description": "Adds a comment to a Jira issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] estimate_story_points(self, issue_key: str, points: float)", "description": "Sets the story points for an issue via the custom field.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _agile_url(self, path: str)", "description": "Constructs URLs for Agile API endpoints.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_boards(self, project_key_or_id: Optional[str] = None)", "description": "Lists Jira boards, optionally filtered by project.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_sprints(self, board_id: int, state: Optional[str] = None)", "description": "Lists sprints within a board.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_sprint(self, payload: Dict[str, Any])", "description": "Creates a new sprint with provided payload.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] update_sprint(self, sprint_id: int, payload: Dict[str, Any])", "description": "Updates properties of an existing sprint.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] move_issues_to_sprint(self, sprint_id: int, issue_keys: List[str])", "description": "Moves multiple issues to a given sprint.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] get_sprint_issues(self, sprint_id: int, jql_filters: Optional[str] = None)", "description": "Retrieves issues within a sprint, with optional JQL filtering.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues_via_params( self, project: Optional[str] = None, board_id: Optional[int] = None, sprint_id: Optional[int] = None, assignee: Optional[str] = None, status: Optional[str] = None, )", "description": "Builds and executes a JQL search based on provided parameters like project, sprint, assignee, and status.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None aclose(self)", "description": "Closes the internal HTTPX client connection.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None __init__(self, base_url: str, email: str, api_token: str, timeout: float = 15.0)", "scope": "JiraClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, status_code: int = 502, details: Any | None = None)", "scope": "JiraClientError", "scopeKind": "class", "description": "unavailable"}, {"name": "JiraClient get_jira_client()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["get_settings", "logger.debug", "timed_log_debug", "self._get_client", "resp.json()", "self._request_with_retries", "base64.b64encode", "asyncio.sleep", "time.time()", "getattr", "get_settings", "self._request_with_retries", "resp.json()", "self._request_with_retries", "resp.json()", "self._request_with_retries", "self._request_with_retries", "self._request_with_retries", "self._request_with_retries", "self._request_with_retries", "self._request_with_retries", "self._request_with_retries"], "search-terms": ["JiraClient", "async Jira API", "issue creation", "issue transition", "sprint management", "Epic creation", "field mapping", "custom fields", "retry logic", "rate limiting", "Agile API", "issue linking", "issue comments", "story points"], "state": 2, "file_id": 12, "knowledge_revision": 62, "git_revision": "015418c1b0e4e4576330bf8f4484bef2f68ed4e6", "revision_history": [{"25": ""}, {"43": ""}, {"47": "4467dda3e275c4c53669082d58325bf2d5d1c8ff"}, {"48": "4467dda3e275c4c53669082d58325bf2d5d1c8ff"}, {"49": "4467dda3e275c4c53669082d58325bf2d5d1c8ff"}, {"51": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"52": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"53": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"54": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"55": "66bfcea8f049087dbde49b3ede46204b1fb8b8cd"}, {"59": "66bfcea8f049087dbde49b3ede46204b1fb8b8cd"}, {"60": "c27fea4fe4dd90704583a6aea994f8b7ea369170"}, {"62": "015418c1b0e4e4576330bf8f4484bef2f68ed4e6"}], "ctags": [{"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraClientError", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^class JiraClientError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def __init__(self, base_url: str, email: str, api_token: str, timeout: float = 15.0) -> None/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, base_url: str, email: str, api_token: str, timeout: float = 15.0)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def __init__(self, message: str, status_code: int = 502, details: Any | None = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, status_code: int = 502, details: Any | None = None)", "scope": "JiraClientError", "scopeKind": "class"}, {"_type": "tag", "name": "_agile_url", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def _agile_url(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_basic_token", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def _basic_token(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_get_client", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def _get_client(self) -> httpx.AsyncClient:$/", "language": "Python", "typeref": "typename:httpx.AsyncClient", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_request_with_retries", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def _request_with_retries(self, method: str, url: str, **kwargs) -> httpx.Response:$/", "language": "Python", "typeref": "typename:httpx.Response", "kind": "member", "signature": "(self, method: str, url: str, **kwargs)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_safe_response_text", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def _safe_response_text(self, response: httpx.Response) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, response: httpx.Response)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "aclose", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def aclose(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "add_comment", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def add_comment(self, issue_key: str, body: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, body: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_epic", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_epic(self, request: Any) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, request: Any)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, description: Optional[str], iss/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, description: Optional[str], issuetype: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_sprint", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_sprint(self, payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, payload: Dict[str, Any])", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_story", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_story(self, request: Any) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, request: Any)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "estimate_story_points", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def estimate_story_points(self, issue_key: str, points: float) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, points: float)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_field_mappings", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def get_field_mappings(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_jira_client", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^def get_jira_client() -> JiraClient:$/", "language": "Python", "typeref": "typename:JiraClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_sprint_issues", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def get_sprint_issues(self, sprint_id: int, jql_filters: Optional[str] = None) -> Dict/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, sprint_id: int, jql_filters: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_transitions", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def get_transitions(self, issue_key: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "link_issue_to_epic", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def link_issue_to_epic(self, epic_key_or_id: str, issue_key_or_id: str) -> Dict[str, A/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, epic_key_or_id: str, issue_key_or_id: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_boards", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def list_boards(self, project_key_or_id: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key_or_id: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_sprints", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def list_sprints(self, board_id: int, state: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, board_id: int, state: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "move_issues_to_sprint", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def move_issues_to_sprint(self, sprint_id: int, issue_keys: List[str]) -> Dict[str, An/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, sprint_id: int, issue_keys: List[str])", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def search_issues(self, jql: str, fields: Optional[List[str]] = None, max_results: int/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, jql: str, fields: Optional[List[str]] = None, max_results: int = 25)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_issues_via_params", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def search_issues_via_params($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, project: Optional[str] = None, board_id: Optional[int] = None, sprint_id: Optional[int] = None, assignee: Optional[str] = None, status: Optional[str] = None, )", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "transition_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def transition_issue(self, issue_key: str, transition_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, transition_id: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "update_sprint", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def update_sprint(self, sprint_id: int, payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, sprint_id: int, payload: Dict[str, Any])", "scope": "JiraClient", "scopeKind": "class"}], "hash": "7c7e88c8388c5b8dfb3d4d15ca71874e", "format-version": 4, "code-base-name": "jira_mcp_backend", "filename": "jira_mcp_backend/app/services/jira_client.py"}