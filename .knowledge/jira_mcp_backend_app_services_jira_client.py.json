{"is_source_file": true, "format": "Python", "description": "This Python source file defines a `JiraClient` class that provides an asynchronous interface to interact with the JIRA REST API, including fetching, searching, and creating issues. It also includes a custom exception for configuration errors.", "external_files": ["httpx", "base64", "json", "logging"], "external_methods": ["httpx.AsyncClient", "httpx.HTTPStatusError"], "published": ["JiraClient", "JiraConfigError"], "classes": [{"name": "JiraConfigError", "description": "Raised when JIRA configuration is missing or invalid."}, {"name": "JiraClient", "description": "A lightweight asynchronous client for interacting with JIRA's REST API, supporting operations like fetching, searching, and creating issues."}], "methods": [{"name": "None __init__( self, base_url: Optional[str], email: Optional[str], api_token: Optional[str], cloud_instance: bool = True, timeout: float = 15.0, )", "description": "Constructor for JiraClient, initializing base_url, email, api_token, and other settings.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None _ensure_configured(self)", "description": "Checks if JIRA configuration is complete; raises JiraConfigError if not.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,str] _auth_headers(self)", "description": "Generates the authorization headers required for API requests.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "httpx.AsyncClient _client(self)", "description": "Creates and returns an instance of httpx.AsyncClient with configured timeout.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] get_issue(self, key: str)", "description": "Fetches a JIRA issue by its key, returning a dictionary or None.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues( self, jql: str, start_at: int = 0, max_results: int = 50, fields: Optional[List[str]] = None, )", "description": "Performs a JIRA search with a JQL query, returns the raw JSON response.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, issue_type: str = \"Task\", fields: Optional[Dict[str, Any]] = None)", "description": "Creates a new JIRA issue with specified project key, summary, issue type, and optional fields.", "scope": "JiraClient", "scopeKind": "class"}], "calls": ["httpx.AsyncClient", "client.get", "client.post", "resp.raise_for_status", "resp.json", "logger.warning"], "search-terms": ["JiraClient", "REST API", "async", "issue", "search", "create"], "state": 2, "file_id": 14, "knowledge_revision": 29, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraConfigError", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^class JiraConfigError(RuntimeError):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def __init__($/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "( self, base_url: Optional[str], email: Optional[str], api_token: Optional[str], cloud_instance: bool = True, timeout: float = 15.0, )", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_auth_headers", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def _auth_headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def _client(self) -> httpx.AsyncClient:$/", "language": "Python", "typeref": "typename:httpx.AsyncClient", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_ensure_configured", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def _ensure_configured(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, issue_type: str = \"Task\", field/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, issue_type: str = \"Task\", fields: Optional[Dict[str, Any]] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def get_issue(self, key: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self, key: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def search_issues($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, jql: str, start_at: int = 0, max_results: int = 50, fields: Optional[List[str]] = None, )", "scope": "JiraClient", "scopeKind": "class"}], "hash": "ebbf3f0d33d251363d182e7a3a0645ba", "format-version": 4, "code-base-name": "jira_mcp_backend", "filename": "jira_mcp_backend/app/services/jira_client.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"29": ""}]}