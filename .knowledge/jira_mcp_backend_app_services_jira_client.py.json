{"is_source_file": true, "format": "Python", "description": "This file defines a Python class JiraClient which provides an asynchronous API client for interacting with Jira's REST API. It includes methods for searching issues, creating issues (epics, stories), linking issues to epics, transitioning issues, adding comments, and managing sprints and boards. It also contains error handling, rate limiting, retries, and custom field handling. The file appears to be a core service component for Jira integrations within a larger application.", "external_files": ["app.core.config"], "external_methods": ["get_settings()"], "published": ["JiraClient", "get_jira_client", "JiraClientError"], "classes": [{"name": "JiraClientError", "description": "Custom exception class for errors interacting with the Jira API."}, {"name": "JiraClient", "description": "Asynchronous Jira API client supporting core and agile endpoints, with retries, rate limiting, and custom field management."}], "methods": [{"name": "httpx.AsyncClient _get_client(self)", "description": "Lazily initializes and returns the internal httpx.AsyncClient.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _basic_token(self)", "description": "Generates the base64-encoded Basic Authentication token.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "httpx.Response _request_with_retries(self, method: str, url: str, **kwargs)", "description": "Performs an HTTP request with retries on certain errors and status codes.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _safe_response_text(self, response: httpx.Response)", "description": "Safely extracts text from a response object, handling exceptions.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues(self, jql: str, fields: Optional[List[str]] = None, max_results: int = 25)", "description": "Searches Jira issues using JQL.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, description: Optional[str], issuetype: str)", "description": "Creates a new Jira issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,str] get_field_mappings(self)", "description": "Discovers and caches custom field IDs for Jira custom fields like Story points and Epic fields.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_epic(self, request: Any)", "description": "Creates a new Epic issue in Jira.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_story(self, request: Any)", "description": "Creates a new Story issue, optionally linking to an epic and setting story points.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] link_issue_to_epic(self, epic_key_or_id: str, issue_key_or_id: str)", "description": "Links an issue to an epic via the Epic Link custom field.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] get_transitions(self, issue_key: str)", "description": "Fetches available transitions for an issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] transition_issue(self, issue_key: str, transition_id: str)", "description": "Performs a transition on a Jira issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] add_comment(self, issue_key: str, body: str)", "description": "Adds a comment to a Jira issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] estimate_story_points(self, issue_key: str, points: float)", "description": "Sets the Story Points custom field on an issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _agile_url(self, path: str)", "description": "Constructs URLs for the Jira Agile API endpoints.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_boards(self, project_key_or_id: Optional[str] = None)", "description": "Lists Jira boards, optionally filtered by project.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_sprints(self, board_id: int, state: Optional[str] = None)", "description": "Lists sprints for a given board.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_sprint(self, payload: Dict[str, Any])", "description": "Creates a new Jira sprint.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] update_sprint(self, sprint_id: int, payload: Dict[str, Any])", "description": "Updates a Jira sprint.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] move_issues_to_sprint(self, sprint_id: int, issue_keys: List[str])", "description": "Moves multiple issues into a specified sprint.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] get_sprint_issues(self, sprint_id: int, jql_filters: Optional[str] = None)", "description": "Retrieves issues associated with a sprint.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues_via_params( self, project: Optional[str] = None, board_id: Optional[int] = None, sprint_id: Optional[int] = None, assignee: Optional[str] = None, status: Optional[str] = None, )", "description": "Builds and executes a JQL query based on parameters like project, sprint, assignee, and status.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None aclose(self)", "description": "Closes the internal httpx client asynchronously.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "JiraClient get_jira_client()", "description": "Factory function to produce a JiraClient instance using application settings.", "scope": "", "scopeKind": ""}, {"name": "None __init__(self, base_url: str, email: str, api_token: str, timeout: float = 15.0)", "scope": "JiraClient", "scopeKind": "class", "description": "unavailable"}, {"name": "__init__(self, message: str, status_code: int = 502, details: Any | None = None)", "scope": "JiraClientError", "scopeKind": "class", "description": "unavailable"}], "calls": ["get_settings()", "httpx.AsyncClient", "asyncio.sleep", "resp.json()", "resp.text", "raise JiraClientError", "JiraClient._get_client()", "JiraClient._request_with_retries()"], "search-terms": ["JiraClient", "async API", "custom fields", "issue linking", "sprint management", "rate limiting", "retry logic", "epic creation", "story creation", "board list", "agile endpoints", "REST API 3", "REST API 1.0"], "state": 2, "file_id": 12, "knowledge_revision": 59, "git_revision": "66bfcea8f049087dbde49b3ede46204b1fb8b8cd", "revision_history": [{"25": ""}, {"43": ""}, {"47": "4467dda3e275c4c53669082d58325bf2d5d1c8ff"}, {"48": "4467dda3e275c4c53669082d58325bf2d5d1c8ff"}, {"49": "4467dda3e275c4c53669082d58325bf2d5d1c8ff"}, {"51": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"52": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"53": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"54": "042a23f3b5e831a9ef9e692b08e8f14072623d4d"}, {"55": "66bfcea8f049087dbde49b3ede46204b1fb8b8cd"}, {"59": "66bfcea8f049087dbde49b3ede46204b1fb8b8cd"}], "ctags": [{"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraClientError", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^class JiraClientError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def __init__(self, base_url: str, email: str, api_token: str, timeout: float = 15.0) -> None/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, base_url: str, email: str, api_token: str, timeout: float = 15.0)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def __init__(self, message: str, status_code: int = 502, details: Any | None = None):$/", "language": "Python", "kind": "member", "signature": "(self, message: str, status_code: int = 502, details: Any | None = None)", "scope": "JiraClientError", "scopeKind": "class"}, {"_type": "tag", "name": "_agile_url", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def _agile_url(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_basic_token", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    def _basic_token(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_get_client", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def _get_client(self) -> httpx.AsyncClient:$/", "language": "Python", "typeref": "typename:httpx.AsyncClient", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_request_with_retries", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def _request_with_retries(self, method: str, url: str, **kwargs) -> httpx.Response:$/", "language": "Python", "typeref": "typename:httpx.Response", "kind": "member", "signature": "(self, method: str, url: str, **kwargs)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_safe_response_text", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def _safe_response_text(self, response: httpx.Response) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, response: httpx.Response)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "aclose", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def aclose(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "add_comment", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def add_comment(self, issue_key: str, body: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, body: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_epic", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_epic(self, request: Any) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, request: Any)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, description: Optional[str], iss/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, description: Optional[str], issuetype: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_sprint", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_sprint(self, payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, payload: Dict[str, Any])", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_story", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def create_story(self, request: Any) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, request: Any)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "estimate_story_points", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def estimate_story_points(self, issue_key: str, points: float) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, points: float)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_field_mappings", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def get_field_mappings(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_jira_client", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^def get_jira_client() -> JiraClient:$/", "language": "Python", "typeref": "typename:JiraClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_sprint_issues", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def get_sprint_issues(self, sprint_id: int, jql_filters: Optional[str] = None) -> Dict/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, sprint_id: int, jql_filters: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_transitions", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def get_transitions(self, issue_key: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "link_issue_to_epic", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def link_issue_to_epic(self, epic_key_or_id: str, issue_key_or_id: str) -> Dict[str, A/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, epic_key_or_id: str, issue_key_or_id: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_boards", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def list_boards(self, project_key_or_id: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key_or_id: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_sprints", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def list_sprints(self, board_id: int, state: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, board_id: int, state: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "move_issues_to_sprint", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def move_issues_to_sprint(self, sprint_id: int, issue_keys: List[str]) -> Dict[str, An/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, sprint_id: int, issue_keys: List[str])", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def search_issues(self, jql: str, fields: Optional[List[str]] = None, max_results: int/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, jql: str, fields: Optional[List[str]] = None, max_results: int = 25)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_issues_via_params", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def search_issues_via_params($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "( self, project: Optional[str] = None, board_id: Optional[int] = None, sprint_id: Optional[int] = None, assignee: Optional[str] = None, status: Optional[str] = None, )", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "transition_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def transition_issue(self, issue_key: str, transition_id: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, transition_id: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "update_sprint", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/app/services/jira_client.py", "pattern": "/^    async def update_sprint(self, sprint_id: int, payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, sprint_id: int, payload: Dict[str, Any])", "scope": "JiraClient", "scopeKind": "class"}], "hash": "c899cb5e608d8d15550a3817e03dafed", "format-version": 4, "code-base-name": "jira_mcp_backend", "filename": "jira_mcp_backend/app/services/jira_client.py"}