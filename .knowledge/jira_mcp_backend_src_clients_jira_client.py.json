{"is_source_file": true, "format": "Python", "description": "A Python module defining the JiraClient class, which provides asynchronous methods to interact with the JIRA REST API using httpx. It includes methods for fetching issues, creating issues, transitioning issues, adding comments, and searching issues.", "external_files": ["../core/config"], "external_methods": ["Settings.JIRA_BASE_URL", "Settings.REQUEST_TIMEOUT_SECONDS", "Settings.JIRA_EMAIL", "Settings.JIRA_API_TOKEN"], "published": ["JiraClient"], "classes": [{"name": "JiraClient", "description": "An asynchronous HTTP client for the JIRA REST API supporting core issue management operations."}], "methods": [{"name": "__init__(self, settings: Settings)", "description": "Constructor that initializes the JiraClient with configuration settings, setting up base URL and timeout.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None open(self)", "description": "Opens an async HTTP client session with appropriate headers, if not already open.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None close(self)", "description": "Closes the current async HTTP client session.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _basic_auth_header(self, username: str, token: str)", "description": "Generates a Basic Authentication header value given username and token.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "httpx.AsyncClient _ensure_client(self)", "description": "Ensures the HTTP client session is open, opening it if necessary.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] get_issue(self, issue_key: str, fields: Optional[str] = None)", "description": "Retrieves details of a specific issue from JIRA by issue key.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, issuetype_name: str, description: Optional[str] = None)", "description": "Creates a new issue in JIRA with given project key, summary, issue type, and optional description.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "None transition_issue(self, issue_key: str, transition_id: str)", "description": "Transitions an existing issue to a new state using a transition ID.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] add_comment(self, issue_key: str, body: str)", "description": "Adds a comment to a specified issue.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search(self, jql: str, start_at: int = 0, max_results: int = 50, fields: Optional[list[str]] = None)", "description": "Searches issues in JIRA based on a JQL query, with optional fields to retrieve.", "scope": "JiraClient", "scopeKind": "class"}], "calls": ["self._basic_auth_header", "httpx.Timeout", "httpx.AsyncClient", "client.get", "client.post", "resp.raise_for_status", "resp.json"], "search-terms": ["JiraClient", "async HTTP client", "JIRA REST API", "issue operations", "httpx.AsyncClient", "JIRA issue management"], "state": 2, "file_id": 11, "knowledge_revision": 22, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    def __init__(self, settings: Settings):$/", "language": "Python", "kind": "member", "signature": "(self, settings: Settings)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_basic_auth_header", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    def _basic_auth_header(self, username: str, token: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, username: str, token: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_ensure_client", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def _ensure_client(self) -> httpx.AsyncClient:$/", "language": "Python", "typeref": "typename:httpx.AsyncClient", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "add_comment", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def add_comment(self, issue_key: str, body: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, body: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "close", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def close(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, issuetype_name: str, descriptio/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, issuetype_name: str, description: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def get_issue(self, issue_key: str, fields: Optional[str] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, issue_key: str, fields: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "open", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def open(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def search(self, jql: str, start_at: int = 0, max_results: int = 50, fields: Optional[/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, jql: str, start_at: int = 0, max_results: int = 50, fields: Optional[list[str]] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "transition_issue", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/clients/jira_client.py", "pattern": "/^    async def transition_issue(self, issue_key: str, transition_id: str) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, issue_key: str, transition_id: str)", "scope": "JiraClient", "scopeKind": "class"}], "hash": "7a4243c9c98d6d5c880f8a28bd60f033", "format-version": 4, "code-base-name": "jira_mcp_backend", "filename": "jira_mcp_backend/src/clients/jira_client.py", "revision_history": [{"22": ""}]}