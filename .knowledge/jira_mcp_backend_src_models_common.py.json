{"is_source_file": true, "format": "Python", "description": "Defines data models using Pydantic for health check, search query, and generic response in a Jira middleware backend.", "external_files": ["pydantic", "typing"], "external_methods": [], "published": ["HealthResponse", "SearchQuery", "GenericResponse"], "classes": [{"name": "HealthResponse", "description": "Simple health check response."}, {"name": "SearchQuery", "description": "Generic search query payload."}, {"name": "GenericResponse", "description": "Generic pass-through JSON response for upstream data."}], "methods": [], "calls": [], "search-terms": ["pydantic models", "HealthResponse", "SearchQuery", "GenericResponse", "common.py"], "state": 2, "file_id": 9, "knowledge_revision": 18, "git_revision": "", "ctags": [{"_type": "tag", "name": "GenericResponse", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^class GenericResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^class HealthResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SearchQuery", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^class SearchQuery(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    app: str = Field(..., description=\"Application name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    data: Dict[str, Any] = Field(default_factory=dict, description=\"Wrapped upstream response da/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "GenericResponse", "scopeKind": "class"}, {"_type": "tag", "name": "environment", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    environment: str = Field(..., description=\"Application environment\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "fields", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    fields: Optional[list[str]] = Field(default=None, description=\"Fields to include in results\"/", "language": "Python", "typeref": "typename:Optional[list[str]]", "kind": "variable", "scope": "SearchQuery", "scopeKind": "class"}, {"_type": "tag", "name": "jql", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    jql: str = Field(..., description=\"JQL string for JIRA search\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "SearchQuery", "scopeKind": "class"}, {"_type": "tag", "name": "max_results", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    max_results: int = Field(default=50, ge=1, le=100, description=\"Maximum results to return\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "SearchQuery", "scopeKind": "class"}, {"_type": "tag", "name": "start_at", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    start_at: int = Field(default=0, ge=0, description=\"Offset for search results\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "SearchQuery", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/jira-middleware-control-server-3338-3347/jira_mcp_backend/src/models/common.py", "pattern": "/^    status: str = Field(..., description=\"Service status\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}], "hash": "e148ee55db65aea9146ec7851feae987", "format-version": 4, "code-base-name": "jira_mcp_backend", "filename": "jira_mcp_backend/src/models/common.py", "fields": [{"name": "str app", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] data", "scope": "GenericResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str environment", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[list[str]] fields", "scope": "SearchQuery", "scopeKind": "class", "description": "unavailable"}, {"name": "str jql", "scope": "SearchQuery", "scopeKind": "class", "description": "unavailable"}, {"name": "int max_results", "scope": "SearchQuery", "scopeKind": "class", "description": "unavailable"}, {"name": "int start_at", "scope": "SearchQuery", "scopeKind": "class", "description": "unavailable"}, {"name": "str status", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"18": ""}]}